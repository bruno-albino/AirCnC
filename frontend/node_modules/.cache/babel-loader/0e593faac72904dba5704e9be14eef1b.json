{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\Bruno da Silva Albin\\\\Documents\\\\Omnistack9\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Bruno da Silva Albin\\\\Documents\\\\Omnistack9\\\\frontend\\\\src\\\\pages\\\\Dashboard\\\\index.js\";\nimport React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport socketio from 'socket.io-client';\nimport api from '../../services/api';\nimport './styles.css';\nexport default function Dashboard() {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        spots = _useState2[0],\n        setSpots = _useState2[1];\n\n  const _useState3 = useState([]),\n        _useState4 = _slicedToArray(_useState3, 2),\n        request = _useState4[0],\n        setRequest = _useState4[1];\n\n  useEffect(() => {\n    const user_id = localStorage.getItem('user');\n    const socket = socketio('http://localhost:3333', {\n      query: {\n        user_id\n      }\n    });\n    socket.on(\"booking_request\", data => {\n      console.log(data);\n    });\n  }, []);\n  useEffect(() => {\n    async function loadSpots() {\n      const user_id = localStorage.getItem('user');\n      const response = await api.get(\"/dashboard\", {\n        headers: {\n          user_id\n        }\n      });\n      setSpots(response.data);\n    }\n\n    loadSpots();\n  }, []);\n  return React.createElement(React.Fragment, null, React.createElement(\"ul\", {\n    className: \"notifications\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, request.map(request => React.createElement(\"li\", {\n    key: request._id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, request.user.email), \" est\\xE1 solicitando uma reserva em \", React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, request.spot.company), \" para a data \", React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, \"request.date\")), React.createElement(\"button\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, \"ACEITAR\"), React.createElement(\"button\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, \"REJEITAR\")))), React.createElement(\"ul\", {\n    className: \"spot-list\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, spots.map(spot => React.createElement(\"li\", {\n    key: spot._id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(\"header\", {\n    style: {\n      backgroundImage: \"url(\".concat(spot.thumbnail_url, \")\")\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }), React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, spot.company), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, spot.price ? \"R$\".concat(spot.price, \"/dia\") : 'GRATUITO')))), React.createElement(Link, {\n    to: \"/new\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: \"btn\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, \"Cadastrar novo Spot\")));\n}","map":{"version":3,"sources":["C:\\Users\\Bruno da Silva Albin\\Documents\\Omnistack9\\frontend\\src\\pages\\Dashboard\\index.js"],"names":["React","useEffect","useState","Link","socketio","api","Dashboard","spots","setSpots","request","setRequest","user_id","localStorage","getItem","socket","query","on","data","console","log","loadSpots","response","get","headers","map","_id","user","email","spot","company","backgroundImage","thumbnail_url","price"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport socketio from 'socket.io-client'\r\nimport api from '../../services/api'\r\n\r\nimport './styles.css'\r\n\r\n\r\nexport default function Dashboard(){\r\n    const [spots, setSpots] = useState([])\r\n    const [request, setRequest] = useState([])\r\n\r\n    useEffect(()=>{\r\n        const user_id = localStorage.getItem('user');\r\n        const socket = socketio('http://localhost:3333', {\r\n            query: { user_id }\r\n        })\r\n\r\n        socket.on(\"booking_request\", data=>{\r\n            console.log(data)\r\n        })\r\n    }, [])\r\n\r\n    useEffect(()=>{\r\n        async function loadSpots(){\r\n            const user_id = localStorage.getItem('user');\r\n            const response = await api.get(\"/dashboard\", {\r\n                headers: {user_id}\r\n            })\r\n\r\n            setSpots(response.data)\r\n        }\r\n        loadSpots();\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            <ul className=\"notifications\">\r\n                {request.map(request=>(\r\n                    <li key={request._id}>\r\n                        <p>\r\n                            <strong>{request.user.email}</strong> est√° solicitando uma reserva em <strong>{request.spot.company}</strong> para a data <strong>request.date</strong>\r\n                        </p>\r\n                        <button>ACEITAR</button>\r\n                        <button>REJEITAR</button>\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n            <ul className=\"spot-list\">\r\n                {spots.map(spot => (\r\n                    <li key={spot._id}>\r\n                        <header style={{backgroundImage: `url(${spot.thumbnail_url})`}}/>\r\n                        <strong>{spot.company}</strong> \r\n                        <span>{spot.price ? `R$${spot.price}/dia` : 'GRATUITO'}</span>\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n\r\n            <Link to='/new'><button className='btn'>Cadastrar novo Spot</button></Link>\r\n        </>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}